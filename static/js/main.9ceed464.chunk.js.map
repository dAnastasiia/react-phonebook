{"version":3,"sources":["components/Section/Section.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/App/App.js","index.js"],"names":["Section","children","this","props","className","Component","Filter","value","onChange","id","htmlFor","type","name","placeholder","autoComplete","ContactForm","state","number","handleChange","e","key","currentTarget","setState","handleSubmit","preventDefault","onSubmit","reset","nameInputId","uuidv4","numberInputId","ContactList","contacts","onDelete","map","onClick","App","filter","addContact","newName","newNumber","find","alert","deleteContact","prevState","contact","changeFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","findContactsInputId","normalizedFilter","toLowerCase","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ceed464.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Section.scss';\r\n\r\nclass Section extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.arrayOf(PropTypes.node).isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <div className=\"Section\">\r\n        <div>{children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({ value, onChange, id }) => {\r\n  return (\r\n    <div className=\"Filter\">\r\n      <label htmlFor={id} className=\"Filter__label\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className=\"Filter__input\"\r\n        placeholder=\"Who are we looking for?\"\r\n        autoComplete=\"off\"\r\n        id={id}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const key = e.currentTarget.name;\r\n    const value = e.currentTarget.value;\r\n\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const nameInputId = uuidv4();\r\n    const numberInputId = uuidv4();\r\n\r\n    return (\r\n      <form className=\"ContactForm\" onSubmit={this.handleSubmit}>\r\n        <label htmlFor={nameInputId} className=\"ContactForm__label\">\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          className=\"ContactForm__input\"\r\n          placeholder=\"Enter name\"\r\n          autoComplete=\"off\"\r\n          id={nameInputId}\r\n        ></input>\r\n\r\n        <label htmlFor={numberInputId} className=\"ContactForm__label\">\r\n          Number\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n          className=\"ContactForm__input\"\r\n          placeholder=\"Enter number\"\r\n          autoComplete=\"off\"\r\n          id={numberInputId}\r\n        ></input>\r\n\r\n        <button className=\"ContactForm__button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './ContactList.scss';\r\n\r\nclass ContactList extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n\r\n    onDelete: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { contacts, onDelete } = this.props;\r\n\r\n    return (\r\n      <ul className=\"ContactList\">\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className=\"ContactList__item\" key={id}>\r\n            <p className=\"ContactList__text\">\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"ContactList__button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport Section from \"../Section\";\r\nimport Filter from \"../Filter\";\r\nimport ContactForm from \"../ContactForm\";\r\nimport ContactList from \"../ContactList\";\r\n\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    this.setState({ contacts: parsedContacts });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n\r\n    if (contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (newName, newNumber) => {\r\n    const findContact = this.state.contacts.find(\r\n      ({ name, number }) => name === newName || number === newNumber\r\n    );\r\n\r\n    if (findContact) {\r\n      alert(`${newName} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    const id = uuidv4();\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [{ id: id, name: newName, number: newNumber }, ...contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = (id) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  changeFilter = (e) => {\r\n    const value = e.currentTarget.value;\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const findContactsInputId = uuidv4();\r\n\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const filteredContacts = contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n\r\n    return (\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n\r\n        <Filter\r\n          value={filter}\r\n          onChange={this.changeFilter}\r\n          id={findContactsInputId}\r\n        />\r\n\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onDelete={this.deleteContact}\r\n        />\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}